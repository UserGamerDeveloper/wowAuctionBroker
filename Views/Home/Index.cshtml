@using Microsoft.AspNetCore.Authentication
@model AuthenticationScheme[]

@if (User?.Identity?.IsAuthenticated ?? false)
{
    <table class="table">
        <tr><td><a href="/Calculator">Калькулятор</a></td><td><a href="/Statistics">Статистика</a></td></tr>
    </table>

    @*<textarea id="messageList" readonly> </textarea>*@
    <button class="btn btn-lg btn-success m-1" type="button" onclick="stopMusic()">stop music</button>
    <div id="messageList"></div>

    <style type="text/css">
        .green {
            background: #AAF387;
        }
        .yellow {
            background: #FCFFA1;
        }
    </style>
    <script>
        function stopMusic() {
            musicElement.pause();
            musicElement.currentTime = 0;
        }
        //$(messageList).height($(window).height() - $(window).height() * 0.05);
        //$(messageList).width($(window).width() - $(window).width() * 0.01);

        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/chat")
            .configureLogging(signalR.LogLevel.Information)
            .build();
        //hubConnection.serverTimeoutInMilliseconds = 1000 * 60 * 10;
        // получение сообщения от сервера
        //var isMusicPlayed = false;
        //var alertElement = document.createElement('alert');
        var parentElement = document.getElementById('messageList');
        var alertElement = new Audio("media/alert.wav");
        //alertElement.setAttribute('src', 'media/alert.wav');
        //var musicElement = document.createElement('music');
        var musicElement = new Audio("media/music.aac");
        //musicElement.setAttribute('src', 'media/music.aac');
        musicElement.setAttribute('loop', '');
        //audioElement.setAttribute('autoplay', '');
        //audioElement.play();
        //var listener = function () {
        //    //result = window.confirm("Есть профит");
        //    //.remove();
        //    //console.log(document.getElementsByTagName('audio'));
        //    musicElement.pause();
        //    //window.removeEventListener('focus', listener);
        //    //isMusicPlayed = false;
        //}
        //musicElement.addEventListener('play', (event) => {
        //    if (!document.hasFocus()) {
        //        window.addEventListener('focus', listener);
        //        window.focus();
        //    }
        //    {
        //        result = window.confirm("Есть профит");
        //        musicElement.pause();
        //    }
        //    //audioElement.remove();
        //    //console.log("audioElement.remove");
        //});
        function display(response) {
            //$(messageList).append(response.message);
            console.log(response);
            let newElement = document.createElement("div");
            newElement.innerHTML = "<pre>" + response.head + "</pre>";
            for (var i = 0; i < response.factions.length; i++) {
                var faction = document.createElement("div");
                faction.innerHTML = "<pre>" + response.factions[i].name + "</pre>";
                for (var j = 0; j < response.factions[i].messages.length; j++) {
                    var message = document.createElement("div");
                    message.innerHTML = "<pre>" + response.factions[i].messages[j].messageStr + "</pre>";
                    message.setAttribute('class', response.factions[i].messages[j].colorName);
                    //switch (response.factions[i].messages[j].colorId) {
                    //    case 0:
                    //        message.setAttribute('class', 'green');
                    //        break;
                    //    case 1:
                    //        message.setAttribute('class', 'yellow');
                    //        break;
                    //}
                    faction.appendChild(message);
                }
                if (response.factions[i].playMusic) {
                    musicElement.play();
                }
                else {
                    alertElement.play();
                }
                //switch (response[i + 1]) {
                //    case 0:
                //        //audioElement.addEventListener('ended', (event) => {
                //        //    audioElement.remove();
                //        //    //console.log("audioElement.remove");
                //        //});
                //        elementt.innerHTML = "<pre>" + response[i] + "</pre>";
                //        elementt.setAttribute('class', 'alert');
                //        newElement.appendChild(elementt);
                //        alertElement.play();
                //        break;
                //    case 1:
                //        //if (musicElement.paused) {
                //        //    .attr({
                //        //        'src': 'http://picosong.com/media/songs/a53ac958428e20721ab0b5b2e3cf16c1.mp3',
                //        //        'autoplay': 'autoplay',
                //        //        'loop': 'loop'
                //        //    });
                //        //    isMusicPlayed = true;
                //        //}
                //        var elementt = document.createElement("div");
                //        elementt.innerHTML = "<pre>" + response[i] + "</pre>";
                //        elementt.setAttribute('class', 'music');
                //        musicElement.play();
                //        break;
                //}
                newElement.appendChild(faction);
            }

            // создает элемент <p> для сообщения пользователя
            //let elem = document.createElement("p");
            //elem.appendChild(document.createTextNode(message));

            parentElement.insertBefore(newElement, parentElement.firstChild);

        }
        hubConnection.on("Notify", display);

        async function start() {
            try {
                await hubConnection.start();
                console.log("SignalR Connected.");
            } catch (err) {
                console.log(err);
                //setTimeout(start, 5000);
            }
        };

        hubConnection.onclose(start);

        // Start the connection.
        start();
    </script>

    @*<h1>Welcome, @User.Identity.Name</h1>

                    <p>
                        @*<div>@Context.Request.Headers["Authorization"].ToString()</div>
                        <!--@foreach (var claim in Context.User.Claims)
                        {
        <div><code>@claim.Type</code>: <strong>@claim.Value</strong></div>
        }
                    </p>

                                    <a class="btn btn-lg btn-danger" href="/signout?returnUrl=%2F">Sign out</a>--> *@
}
else
{
    @*@await Html.PartialAsync("SignIn", Model)*@
    <h1>Welcome, anonymous</h1>
    <a class="btn btn-lg btn-success" href="/signin?returnUrl=%2F">Sign in</a>
}
